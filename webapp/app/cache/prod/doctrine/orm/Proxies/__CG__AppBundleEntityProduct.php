<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \AppBundle\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'content', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'image_path', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'status', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'priority', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'slug', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'created_at', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'updated_at', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'created_by', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'updated_by', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'categories', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'colors', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'file', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'new_path', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'productColors', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'productCategories', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'image_show', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'multiple_file'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'content', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'image_path', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'status', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'priority', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'slug', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'created_at', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'updated_at', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'created_by', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'updated_by', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'categories', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'colors', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'file', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'new_path', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'productColors', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'productCategories', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'image_show', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'multiple_file'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', [$content]);

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', []);

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setImagePath($imagePath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImagePath', [$imagePath]);

        return parent::setImagePath($imagePath);
    }

    /**
     * {@inheritDoc}
     */
    public function getImagePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImagePath', []);

        return parent::getImagePath();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority($priority)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', [$priority]);

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', []);

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy($updatedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$updatedBy]);

        return parent::setUpdatedBy($updatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function addCategory(\AppBundle\Entity\Category $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategory', [$category]);

        return parent::addCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategory(\AppBundle\Entity\Category $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategory', [$category]);

        return parent::removeCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', []);

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function addColor(\AppBundle\Entity\Color $color)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addColor', [$color]);

        return parent::addColor($color);
    }

    /**
     * {@inheritDoc}
     */
    public function removeColor(\AppBundle\Entity\Color $color)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeColor', [$color]);

        return parent::removeColor($color);
    }

    /**
     * {@inheritDoc}
     */
    public function getColors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColors', []);

        return parent::getColors();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', [$file]);

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', []);

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function upload($webPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', [$webPath]);

        return parent::upload($webPath);
    }

    /**
     * {@inheritDoc}
     */
    public function refreshUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'refreshUpdated', []);

        return parent::refreshUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function updatedTimestamps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updatedTimestamps', []);

        return parent::updatedTimestamps();
    }

    /**
     * {@inheritDoc}
     */
    public function processValues($container)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processValues', [$container]);

        return parent::processValues($container);
    }

    /**
     * {@inheritDoc}
     */
    public function addProductColor(\AppBundle\Entity\ProductColor $productColor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProductColor', [$productColor]);

        return parent::addProductColor($productColor);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProductColor(\AppBundle\Entity\ProductColor $productColor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProductColor', [$productColor]);

        return parent::removeProductColor($productColor);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductColors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductColors', []);

        return parent::getProductColors();
    }

    /**
     * {@inheritDoc}
     */
    public function addProductCategory(\AppBundle\Entity\ProductCategory $productCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProductCategory', [$productCategory]);

        return parent::addProductCategory($productCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProductCategory(\AppBundle\Entity\ProductCategory $productCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProductCategory', [$productCategory]);

        return parent::removeProductCategory($productCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductCategories', []);

        return parent::getProductCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageShow($imageShow)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageShow', [$imageShow]);

        return parent::setImageShow($imageShow);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageShow()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageShow', []);

        return parent::getImageShow();
    }

    /**
     * {@inheritDoc}
     */
    public function setMultipleFile($multipleFile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMultipleFile', [$multipleFile]);

        return parent::setMultipleFile($multipleFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getMultipleFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMultipleFile', []);

        return parent::getMultipleFile();
    }

}
